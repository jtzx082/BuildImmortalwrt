name: Build OpenWrt ImageBuilder Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: x86-64
      IMAGEBUILDER_TAG: x86-64-24.10-SNAPSHOT
      IMAGEBUILDER_IMAGE: immortalwrt/imagebuilder:x86-64-24.10-SNAPSHOT
      IMAGE_SIZE: "2048MB"
      ROOTFS_SIZE: "2048"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare softs/ipk packages
        run: |
          mkdir -p ./ipks
          if [ -d "./softs" ]; then
            cp ./softs/*.ipk ./ipks/ || true
          fi

      - name: Read plugins.list to set packages
        id: plugins
        run: |
          if [ -f plugins.list ]; then
            pkgs=$(grep -v '^#' plugins.list | xargs | tr '\n' ' ')
            echo "PKGS=$pkgs" >> $GITHUB_ENV
          else
            echo "PKGS=" >> $GITHUB_ENV
          fi

      - name: Docker pull ImageBuilder
        run: docker pull $IMAGEBUILDER_IMAGE

      - name: Build firmware using ImageBuilder
        run: |
          mkdir -p output
          docker run --rm \
            -v ${{ github.workspace }}:/custom \
            $IMAGEBUILDER_IMAGE \
            bash -c '
              # 复制自定义文件到ImageBuilder工作目录
              [ -d /custom/ipks ] && cp /custom/ipks/*.ipk packages/ 2>/dev/null || true
              [ -d /custom/files ] && cp -r /custom/files . 2>/dev/null || true
              
              # 设置构建参数
              export IMAGE_SIZE="${IMAGE_SIZE}"
              export ROOTFS_SIZE="${ROOTFS_SIZE}"
              
              # 执行构建命令
              if [ -d files ]; then 
                make FILES=files PACKAGES="$PKGS" EXTRA_IMAGE_NAME=custom \
                  IMAGE_SIZE="${IMAGE_SIZE}" ROOTFS_SIZE="${ROOTFS_SIZE}"
              else
                make PACKAGES="$PKGS" EXTRA_IMAGE_NAME=custom \
                  IMAGE_SIZE="${IMAGE_SIZE}" ROOTFS_SIZE="${ROOTFS_SIZE}"
              fi || exit 1
              
              # 复制构建产物
              mkdir -p /custom/output
              find bin/targets -type f \( -name "*.img*" -o -name "*.bin*" \) -exec cp {} /custom/output/ \;
              find bin/targets -type f -name "*.ipk" -exec cp {} /custom/output/ \;
              ls -lh /custom/output || true
            '

      - name: Upload firmware to Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware
          path: output/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}-firmware-${{ github.run_number }}
          name: "OpenWrt Firmware Build ${{ github.run_number }}"
          body: |
            自动编译固件，包含 plugins.list 指定包和 softs/ 下的 ipk。
            固件最大容量：${{ env.IMAGE_SIZE }}，根文件系统大小：${{ env.ROOTFS_SIZE }}MB。
          draft: false
          prerelease: false

      - name: Upload firmware to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_release.outputs.tag_name }}
          name: "OpenWrt Firmware Build ${{ github.run_number }}"
          files: output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
