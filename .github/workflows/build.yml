name: Build ImmortalWrt Firmware Docker

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0)'
        required: true
        default: 'nightly'
      image_size:
        description: 'Firmware image size (e.g., 2048MB)'
        required: false
        default: '2048MB'
      rootfs_size:
        description: 'RootFS partition size (e.g., 2048)'
        required: false
        default: '2048'

env:
  IMAGE_NAME: immortalwrt/imagebuilder:x86-64-24.10-SNAPSHOT
  BUILD_DIR: ${{ github.workspace }}/imagebuilder
  OUTPUT_DIR: ${{ github.workspace }}/bin

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare directories
        run: |
          mkdir -p ${{ env.BUILD_DIR }}/packages/custom
          mkdir -p ${{ env.OUTPUT_DIR }}
          mkdir -p ${{ env.BUILD_DIR }}/files

      - name: Copy custom files
        run: |
          [ -d softs ] && find softs -name '*.ipk' -exec cp {} ${{ env.BUILD_DIR }}/packages/custom/ \;
          [ -f plugins.list ] && cp plugins.list ${{ env.BUILD_DIR }}/
          [ -d files ] && cp -R files/* ${{ env.BUILD_DIR }}/files/
          echo "Custom files copied successfully"

      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE_NAME }}

      - name: Build firmware (run as root in container)
        run: |
          if [ -f "${{ env.BUILD_DIR }}/plugins.list" ]; then
            PACKAGES=$(tr '\n' ' ' < ${{ env.BUILD_DIR }}/plugins.list)
          else
            PACKAGES=""
          fi

          docker run --rm --user 0 \
            -v ${{ env.BUILD_DIR }}:/home/build/openwrt \
            -v ${{ env.OUTPUT_DIR }}:/home/build/openwrt/bin \
            ${{ env.IMAGE_NAME }} \
            /bin/bash -c "
            set -e
            cd /home/build/openwrt

            # 生成自定义软件包索引（用容器里的 opkg-make-index）
            if [ -d packages/custom ] && [ \"\$(ls -A packages/custom/*.ipk 2>/dev/null)\" ]; then
              cd packages/custom
              opkg-make-index . > Packages
              gzip -c Packages > Packages.gz
              cd ../..
            fi

            # 添加自定义软件包源
            echo 'src custom file://packages/custom' >> repositories.conf

            # 设置分区大小
            sed -i \"s/CONFIG_TARGET_ROOTFS_PARTSIZE=.*/CONFIG_TARGET_ROOTFS_PARTSIZE=${{ inputs.rootfs_size || '2048' }}/\" .config || true

            # 开始构建固件
            make image PACKAGES=\"base-files \$PACKAGES\" PROFILE=\"generic\" FILES=\"files/\" \
              CONFIG_TARGET_ROOTFS_PARTSIZE=${{ inputs.rootfs_size || '2048' }} \
              CONFIG_TARGET_IMAGES_GZIP=y
          "

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-binaries
          path: ${{ env.OUTPUT_DIR }}/*.gz
          retention-days: 7

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: ${{ inputs.release_tag != 'nightly' }}
        with:
          tag_name: ${{ inputs.release_tag }}
          name: ImmortalWrt Build ${{ inputs.release_tag }}
          files: ${{ env.OUTPUT_DIR }}/*.gz
          draft: false
          prerelease: false

      - name: Upload nightly build
        if: ${{ inputs.release_tag == 'nightly' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly-${{ github.run_id }}
          name: Nightly Build (${{ github.run_id }})
          files: ${{ env.OUTPUT_DIR }}/*.gz
          draft: false
          prerelease: true
