name: Build ImmortalWRT Firmware

on:
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y zstd build-essential libncurses-dev git gawk unzip

    - name: Download and extract ImageBuilder
      run: |
        curl -LO https://downloads.immortalwrt.org/releases/24.10.1/targets/x86/64/immortalwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64.tar.zst
        tar -I zstd -xf immortalwrt-imagebuilder-*.tar.zst
        rm immortalwrt-imagebuilder-*.tar.zst
        mv immortalwrt-imagebuilder-* imagebuilder

    - name: Apply custom configuration
      run: |
        # 复制自定义配置到ImageBuilder
        [ -f .config ] && cp .config imagebuilder/
        [ -f feeds.conf.default ] && cp feeds.conf.default imagebuilder/
        
        # 对于ImmortalWRT ImageBuilder，不需要运行make defconfig
        # 直接准备构建环境
        cd imagebuilder
        mkdir -p custom-files/etc
        
        # 如果存在feeds.conf.default，则更新feeds
        if [ -f feeds.conf.default ]; then
            cp feeds.conf.default .
            ./scripts/feeds update -a
            ./scripts/feeds install -a
        fi

    - name: Build firmware
      run: |
        cd imagebuilder
        # 使用PROFILE参数指定目标设备
        make image PROFILE="generic" \
            PACKAGES="$(grep '^CONFIG_PACKAGE' .config | \
                       sed 's/^CONFIG_PACKAGE_//;s/=y//;s/^"//;s/"$//' | \
                       tr 'A-Z' 'a-z' | tr '\n' ' ')" \
            FILES="custom-files"

    - name: Upload artifacts to workflow
      uses: actions/upload-artifact@v4
      with:
        name: firmware-binaries
        path: imagebuilder/bin/targets/*/*/
        retention-days: 7

    - name: Create release and upload assets
      if: success() && github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        name: "Firmware Build ${{ github.run_number }}"
        tag_name: "firmware-${{ github.run_id }}"
        body: "Automatically built ImmortalWRT firmware"
        draft: false
        prerelease: false
        files: |
          imagebuilder/bin/targets/*/*/*.bin
          imagebuilder/bin/targets/*/*/*.gz
          imagebuilder/bin/targets/*/*/*.manifest
