name: Build ImmortalWrt Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGEBUILDER_URL: "https://downloads.immortalwrt.org/releases/24.10.1/targets/x86/64/immortalwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64.tar.zst"
      IMAGEBUILDER_ARCHIVE: "immortalwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64.tar.zst"
      IMAGEBUILDER_DIR: "immortalwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64"
      SOFTS_DIR: "softs"
      PLUGINS_FILE: "plugins.list"
      OUTPUT_DIR: "output"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zstd

    - name: Download ImmortalWrt ImageBuilder
      run: |
        wget $IMAGEBUILDER_URL
        tar -I zstd -xf $IMAGEBUILDER_ARCHIVE

    - name: Prepare custom IPK packages
      run: |
        mkdir -p $IMAGEBUILDER_DIR/packages/custom
        if [ -d "$SOFTS_DIR" ]; then
          cp $SOFTS_DIR/*.ipk $IMAGEBUILDER_DIR/packages/custom/ || true
        fi

    - name: Parse plugins.list to get package names
      id: plugins
      run: |
        if [ -f "$PLUGINS_FILE" ]; then
          PKGS=$(grep -vE '^\s*#|^\s*$' $PLUGINS_FILE | tr '\n' ' ')
          echo "PKGS=${PKGS}" >> "$GITHUB_ENV"
        else
          echo "No plugins.list file found!"
          exit 1
        fi

    - name: Build firmware
      run: |
        cd $IMAGEBUILDER_DIR
        make image \
          EXTRA_PACKAGES="custom/*.ipk $PKGS" \
          FILES=../files \
          -j$(nproc)
        mkdir -p ../$OUTPUT_DIR
        cp -r bin/targets/x86/64/* ../$OUTPUT_DIR/

    - name: Upload firmware to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-x86-64
        path: ${{ env.OUTPUT_DIR }}

    - name: Generate release tag
      id: release_tag
      run: |
        echo "tag=auto-build-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.release_tag.outputs.tag }}
        name: "ImmortalWrt x86_64 Firmware ${{ steps.release_tag.outputs.tag }}"
        body: |
          This is an automated build of ImmortalWrt x86_64 firmware.
        files: ${{ env.OUTPUT_DIR }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
