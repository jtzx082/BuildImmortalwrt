name: Build ImmortalWrt Firmware

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGEBUILDER_URL: https://downloads.immortalwrt.org/releases/24.10.1/targets/x86/64/immortalwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64.tar.zst
      IMAGEBUILDER_DIR: immortalwrt-imagebuilder-24.10.1-x86-64.Linux-x86_64
      PLUGIN_LIST_FILE: plugins.list
      IPK_DIR: softs
      ROOTFS_PARTSIZE: 1024

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git subversion libssl-dev gettext unzip zlib1g-dev file wget zstd

      - name: Download ImageBuilder
        run: |
          wget $IMAGEBUILDER_URL -O imagebuilder.tar.zst

      - name: Extract ImageBuilder
        run: |
          tar --use-compress-program=unzstd -xvf imagebuilder.tar.zst

      - name: Prepare IPK packages
        run: |
          mkdir -p $IMAGEBUILDER_DIR/packages
          if [ -d "$IPK_DIR" ]; then
            cp $IPK_DIR/*.ipk $IMAGEBUILDER_DIR/packages/ || true
          fi

      - name: Prepare files directory (optional)
        run: |
          mkdir -p $IMAGEBUILDER_DIR/files

      - name: Read plugin list
        id: plugins
        run: |
          PLUGINS=$(tr '\n' ' ' < $PLUGIN_LIST_FILE)
          echo "plugins=$PLUGINS" >> $GITHUB_OUTPUT

      - name: Build firmware
        working-directory: ${{ env.IMAGEBUILDER_DIR }}
        run: |
          make update
          echo "CONFIG_TARGET_ROOTFS_PARTSIZE=${ROOTFS_PARTSIZE}" >> .config
          make image PROFILE=generic PACKAGES="${{ steps.plugins.outputs.plugins }}" FILES=files/
          mkdir -p ../output
          cp -r bin/targets/x86/64/* ../output/

      - name: Upload firmware as artifact
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-firmware
          path: output/

      - name: Generate release tag
        id: tag
        run: |
          echo "tag=auto-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ImmortalWrt Firmware - ${{ steps.tag.outputs.tag }}
          body: |
            Automated build for ImmortalWrt firmware.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload firmware to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ImmortalWrt Firmware - ${{ steps.tag.outputs.tag }}
          files: output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
